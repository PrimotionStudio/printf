.\" Man page for _printf
.TH _printf 3 "October 2023" "Custom printf Function Manual"

.SH NAME
_printf \- custom printf function

.SH SYNOPSIS
.B #include <main.h>
.BR int _printf (const char *format, ...);

.SH DESCRIPTION
The
.B _printf
function is a custom implementation of the printf function. It allows formatted output to be printed to the standard output.

This custom printf function is designed to work similarly to the standard printf function and provides similar format specifiers and functionalities.

.PP
The function supports the following format specifiers:

.RS
.TP
.B %c
Prints a single character.

.TP
.B %s
Prints a null-terminated string.

.TP
.B %d, %i
Prints an integer as a signed decimal number.

.TP
.B %u
Prints an integer as an unsigned decimal number.

.TP
.B %o
Prints an integer as an octal number.

.TP
.B %x, %X
Prints an integer as a hexadecimal number (lowercase or uppercase).

.TP
.B %p
Prints a pointer's value.

.TP
.B %%
Prints a percent sign.

.TP
.B %r
Prints the reverse of a string (custom format).

.PP
The function provides similar options for controlling the width, precision, and size of the printed values.

.SH RETURN VALUE
.B _printf
returns the number of characters printed. If an error occurs, it returns -1.

.SH EXAMPLES
.PP
To print a string:
.nf
.BR _printf ("Hello, %s!", "world");
.fi

.PP
To print an integer:
.nf
.BR _printf ("Number: %d", 42);
.fi

.SH SEE ALSO
.BR printf (3), format (5)

.SH AUTHOR
Your Name <your@email.com>

.SH BUGS
Known issues: None

.PP
Please report any bugs or issues to <your@email.com>.

